#!/usr/bin/env bash
#
# Written by: crossroads1112
# Purpose: This scrip is in esscence a wrapper to rm. It detects whether the file the user is trying to delete is a file, an empty directory, a non-empty directory or a file/directory that you do not own. 
# This script will prompt the user when the user does not have write permissions to the file/folder or when it is a non-empty directory. It also prints out a list of removed files/directories upon termination. 
#
#
#
##############################################
bold=$(tput bold)
normal=$(tput sgr0)

[[ $# == 0 ]] && echo "${0##*/}: This script requires at least one argument" && exit 1

checkroot(){
    if [[ ! -w $1 ]]; then
        echo -n "You do not have write permissions to \"$1\". Use sudo? [Y/n] "
        read root
        case $root in 
            ""|[Yy]|[Yy][Ee][Ss]) eval "v='sudo '"
        esac
    fi
}

while [[ $# > 0 ]]; do
    remmsg="${bold}$1${normal} removed"
    v=""
    if [[ -f $1 || -h $1 ]]; then
        checkroot $1
        ${v}rm $1 && echo "File $remmsg"
        shift
    elif [[ -d $1 ]]; then
        checkroot $1
        if [[ -z $(ls -A $1 ) ]]; then
            ${v}rmdir $1 && echo "Empty directory $remmsg"
           shift
        else
            echo -n "$1 is a directory. Do you still want to delete it? [Y/n] "
            read del
            case $del in
                ""|[Yy]|[Yy][Ee][Ss]) ${v}rm -rf $1 && echo "Directory $remmsg recursively" ;;
            esac
            shift
        fi
    elif [[ ! -e $1 ]]; then
        echo "$1 does not exist"
        shift
    else
        echo "$1 is not a regular file or directory. You'll have to use rm itself."
        shift
    fi
done
